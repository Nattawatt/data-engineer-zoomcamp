# Local .terraform directories
# **/.terraform/*

#python
.python-version

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc
.terraform/
**/.terraform.lock.hcl/*

# file
*.csv
*.csv.gz
*.parquet

# python
/__pycache__

# 
ny_taxi_postgres_data/

# week1 key
week_1_basics_n_setup/1_TERRAFORM/terraform/*.json

# week4
week_4_analytics_engineering/src/dbt/logs/*
target/
dbt_packages/

# ipython
.ipynb_checkpoints

# data for week5
week_5_batch_processing/src/data
week_5_batch_processing/src/fhvhv
fhvhv

# project
week_7_project/kafka/__pycache__
week_7_project/airflow/.env
week_7_project/airflow/logs/*
week_7_project/terraform/.terraform*
